Q. Why do Python string and list indices start at 0 instead of 1?
A.その規則は、配列要素のアドレスが配列の先頭のアドレスにインデックスを追加することによって計算されるマシン言語プログラミングから始まりました。インデックスを1から開始すると、配列の最初のスペースが無駄になるか、1を引くのに時間がかかることになります。ここにEdsger Dijkstraの説明があります。



Q. What happens if I use a negative integer to index an array?
A.google翻訳しても理解できませんでした。
google翻訳
答えはあなたを驚かせるかもしれません。配列a[]を指定すると、インデックス-iをの省略形として使用できますlen(a)-i。たとえば、配列の最後の要素をa[-1]or a[len(a)-1]で、最初の要素をa[-len(a)]orで参照できますa[0]。Pythonは上昇しIndexErrorますが、範囲のインデックス外を使用する場合は、実行時に-len(a)通過len(a)-1。



Q. Why does the slice a[i:j] include a[i] but exclude a[j]?
A.google翻訳しても理解できませんでした。
google翻訳
表記はrange()、で定義された範囲と一致しています。これは、左端を含み、右端を除外します。それはいくつかの魅力的なプロパティにつながります：j-iはサブ配列の長さです（切り捨てがないと仮定）。a[0:len(a)]配列全体です。a[i:i]空の配列です。a [i:j] + a[j:k]はサブ配列a[i:k]です。



Q. What happens when I compare two arrays a[] and b[] with (a == b)?
A.場合によります。数値の配列（または多次元配列）の場合、期待どおりに機能します。それぞれが同じ長さで、対応する要素が等しい場合、配列は等しくなります。




Q. Which pitfalls should I watch out for when using arrays?
A.配列の作成には、配列の長さに比例した時間がかかることに注意してください。ループ内で配列を作成する場合は特に注意が必要です。


