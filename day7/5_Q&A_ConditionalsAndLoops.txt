Q. What is the difference between = and ==?
A.この質問を繰り返しますが、条件式で本当に==を意味している場合は=を使用しないでください。ステートメントのx = y割り当てはｙをｘに代入します。一方でx == yは2つの変数が等しいかどうかをテストします。一部のプログラミング言語では、この違いがプログラムに悪影響を及ぼし、検出が困難になる場合があります。Pythonでは、代入ステートメントは式ではありません。たとえば、cash == goalの代わりにcash = goalと入力を間違えた場合、コンパイラはバグを見つけてくれます。

% python gambler.py 10 20 1000
File "gambler.py", line 21
  if cash = goal:
          ^
SyntaxError: invalid syntax



Q. What happens if I leave out the colon in an if, while, or for statement?
A. Pythonはコンパイル時にSyntaxErroraを発生させます。



Q. What are the rules for indenting statement blocks?
A.ブロック内の各ステートメントには同じインデントが必要です。そうでない場合、Pythonはコンパイル時にIndentationErroratを発生させます。Pythonプログラマは通常、4スペースのインデントスキームを使用します。



Q. Should I use tab characters to indent my code?
A.いいえ。.pyファイルにてタブ文字を配置しないでください。ただし、多くのエディターには、<Tab>キーを入力したときに、一連のスペースをプログラムに自動的に配置するオプションがあります。Pythonプログラムを作成するときは、このオプションを使用するのが適切です。



Q. Can I spread a long statement over multiple lines?
A.はい。ただし、Pythonがインデントを処理する方法のため、注意が必要です。複数行にまたがる式が括弧（または角括弧、中括弧）で囲まれている場合は、特別なことをする必要はありません。たとえば、これは3行にまたがる単一のステートメントです。

stdio.write（a0 + a1 + a2 + a3 + 
            a4 + a5 + a6 + a7 + 
            a8 + a9）
ただし、暗黙の行継続がない場合は、継続する各行の終わりにバックスラッシュ文字を使用する必要があります。

合計= a0 + a1 + a2 + a3 + \ 
        a4 + a5 + a6 + a7 + \ 
        a8 + a9



Q. Suppose I want to skip over some of code in a loop in some cases, or suppose that I want the body of a conditional statement to be empty, so that no statement is executed. Does Python have language support for such things?
A.はい、Pythonはこれらの条件に対してそれぞれcontinueとpassステートメントを提供しています。ただし、これらが本当に必要な状況はまれであり、このブックサイトでは使用しません。また、switchPython にはステートメント（相互に排他的な代替手段）はありませんが、他の言語で一般的に見られるgotoステートメントや、（非構造化制御フローの）ステートメントはありません。



Q. Can I use a non-boolean expression in an if or while statement?
A.はい、しかし、それはおそらく良い考えではありません。ゼロまたは空の文字列に式が考慮されFalseされます。他のすべての数値式および文字列式が考慮されTrueになります。



Q. Are there cases where I must use a for statement but not a while statement, or vice versa?
A.whileステートメントを使用して任意の種類のループを実装できますが、ここで定義されているように、forステートメントは、整数の有限シーケンスを反復する種類のループにのみ使用できます。後で（セクション1.4、3.3、および4.4）、forステートメントを使用する他の方法を検討します。




Q. Can I use the built-in range() function to create a sequence of integers with a step size of some value other than 1?
A.はい、range()オプションの3番目の引数ステップをサポートします。デフォルトは1です。つまりrange(start, stop, step)、整数start、start+ step、start+ 2 * stepなどのシーケンスを生成します。もしstepが正の整数の場合、シーケンスはstart　i* + stepがstopより小さい限り継続します。もしstepが負の整数なら、シーケンスはstart+ Iは、*ステップはstopより大きい限り継続します。たとえばrange(0, -100, -1)、整数シーケンス0、-1、-2、...、-99を返します。



Q. Can I use floats as arguments to range()?
A.いいえ、すべての引数は整数でなければなりません。



Q. Can I change the loop-index variable within a for loop?
A.はい。ただし、によって生成される整数のシーケンスには影響しませんrange()。たとえば、次のループは0から99までの100の整数を書き込みます。

範囲（100）の
    iの場合：stdio.writeln（i）
    i + = 10



Q. In a for loop, what is the value of the loop-control variable after the loop terminates?
A.ループ中のループ制御変数の最後の値です。上記のforループの終了時iに、整数109を参照します。forループの終了後にループ制御変数を使用することは、一般的にスタイルが悪いと見なされるため、どのプログラムでも使用しません。



Q. My program is stuck in an infinite loop. How do I stop it?
A.タイプCtrl-c。つまり、Ctrlまたはというラベルの付いたキーcontrolを押したまま、cキーを押します。Windowsコマンドプロンプトの場合は、と入力しCtrl-zます。



Q. Is there an example for when the following for and while loops are not equivalent?
A.はい。ヒント：continueステートメントを使用します。

