１．質問：システム開発ライフサイクルとは？
お客様のニーズから引き出し(要件定義)、システムをデザインし(基本設計、詳細設計)、実装し(システム開発)、テストを行い(単体テスト、統合テスト)、実際に稼動する(納品)までの一連の開発サイクル。
最も代表的なシステム開発ライフサイクルが、ウォーターファールモデル。



２．質問：基本設計書はどんなものを含む？
基本設計では、操作画面や操作方法、データ出力など、ユーザーから見えるインターフェース部分の仕様を決定し、セキュリティや運用規定、システム開発のスケジュールや費用などを検討し、ユーザーに向けた仕様を設計する。



３．質問：良い設計と悪い設計（オブジェクト指向) ?

良い設計：カプセル化により、「保守性」「再利用性」を確保する。将来性を考慮して「拡張性」を意識した設計。
継承が可能なクラスの導出の良い例：
共通する項目を「商品」クラスとして定義し、各クラスの差分だけ定義する。

悪い設計：将来性を考慮せず現状のまま設計。そのため「拡張性」、「再利用性」、「保守性」を十分に確保できない。
継承が可能なクラスの導出の悪い例：
共通する項目をそのままクラスに定義したため同じ内容のコーディングが複数個所で必要。



４．質問：良い設計と悪い設計（構造化) ?
良い設計例：
モジュール分割：モジュール分割技法を用いて、適切なモジュール分割を行う。
モジュール内の凝集度：高い
モジュール間の結合度：弱い

悪い設計例：
モジュール分割：モジュール分割技法を行わない。
モジュール内の凝集度：低い
モジュール間の結合度：強い

