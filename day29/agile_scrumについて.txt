Agileへの質問と勉強

1. アジャイル開発とは? 簡単に説明
アジャイル開発はシステムやソフトウェア開発におけるプロジェクト開発手法の一つ。大きな単位でシステムを区切ることなく、小単位で実装とテストを繰り返して開発を進めていくこと。チームを組んで「要件定義→設計→開発→テスト→リリース」といった小さいサイクルを繰り返していく作業。このサイクルのことを「イテレーション」という。


2. アジャイルとウォーターフォールの違いは何ですか?
ウォーターファール型は工程ごとに区分けしている。最初に決めた要件を100％見たすことが求められる。「企画→要件定義→設計→実装→テスト」その後リリースとなる。
一方でアジャイル開発は企画後はイテレーションと呼ばれる小さなサイクルを繰り返していく。ウォーターファール型との違いの一つとして最初に決定した要件を100％満たすのが絶対ではなく、サイクル毎に計画→設計→開発→テストと繰り返すのでリリース時に最高のプロダクトを完成させるのが目的。


3. アジャイルソフトウェア開発宣言?
2001年に、当時軽量のソフトウェア開発を提唱していた17名の技術者やプログラマーが米国ユタ州に集まり、開発手法の重要な部分について統合することを議論した。それをまとめたものが「アジャイルソフトウェア開発宣言」。


4. アジャイル宣言の背後にある原則?
顧客満足を最優先し、価値のあるソフトウェアを早く継続的に提供します。

要求の変更はたとえ開発の後期であっても歓迎します。変化を味方につけることによって、お客様の競争力を引き上げます。

動くソフトウェアを、2-3週間から2-3ヶ月というできるだけ短い時間間隔でリリースします。

ビジネス側の人と開発者は、プロジェクトを通して日々一緒に働かなければなりません。

意欲に満ちた人々を集めてプロジェクトを構成します。環境と支援を与え仕事が無事終わるまで彼らを信頼します。

情報を伝えるもっとも効率的で効果的な方法はフェイス・トゥ・フェイスで話をすることです。

動くソフトウェアこそが進捗の最も重要な尺度です。

アジャイル･プロセスは持続可能な開発を促進します。一定のペースを継続的に維持できるようにしなければなりません。

技術的卓越性と優れた設計に対する不断の注意が機敏さを高めます。

シンプルさ（ムダなく作れる量を最大限にすること）が本質です。

最良のアーキテクチャ・要求・設計は、自己組織的なチームから生み出されます。

チームがもっと効率を高めることができるかを定期的に振り返り、それに基づいて自分たちのやり方を最適に調整します。



5. スクラムの障害事項は何ですか?
プロジェクトを進めていく上での障害や妨害になる事項のこと。
以下がその一例。
未完了なままの作業
情報の不足
繰り返しの作業
待ち
依存先の欠如
割り込み
バグ
官僚主義
間違った、もしくは不明瞭なコミュニケーション
意思決定がなされない
間違った推定
時間がたりない
パーツがない
よく知らない新しい技術


6. アジャイルとスクラムの違いは何ですか?
アジャイルは開発スタイルの総称。スクラムはそのアジャイル開発のフレームワークのひとつ。スクラムのほかにもエクストリーム・プログラミングやユーザー機能駆動開発などがある。


7. スクラムにおけるイベントと出席者?
◎：必須、○：どちらでも、△：要請があれば参加、×：参加できない
デイリースクラム(朝会のこと)
参加者：◎開発チーム、○スクラムマスター、△ステークホルダー

スプリントプランニング(スプリント開始時に行われる最初のスクラムイベント。ここでスプリントバックログを作成する。)
参加者：◎プロダクトオーナー、◎開発チーム、◎スクラムマスター、△ステークホルダー

スプリントレビュー(スプリントの成果物を披露し、プロダクトについてフィードバックを得るためのミーティング。)
参加者：◎プロダクトオーナー、◎開発チーム、◎スクラムマスター、○ステークホルダー

スプリントレトロスペクティブ(スプリント終了時に行われる最後のスクラムイベント。スクラムチーム全員が参加する。)
参加者：◎プロダクトオーナー、◎開発チーム、◎スクラムマスター、△ステークホルダー



8. スプリントとは?
スプリントとは1週間、2週間といった時間枠のこと。


9. スプリントの期間はどのくらいが適切?
1～4週間が適切だと思う。


10.スクラムにおいては開発チームの人数は?
3～9人までとされている。


11.スプリント計画とは何か?
スプリント計画はスプリントを開始するスクラムにおけるイベント。スプリント計画の目的は、スプリント実行内容や作業の達成方法を定義すること。


12.スプリント計画 の方法?
ステップ１：会議前にロードマップを確認する。
プロジェクトのロードマップに目を通しておくこと。

ステップ２：会議前の先行会議
バックロググルーミングと次回スプリントで完了すべき作業の決定。
バックロググルーミングとはバックログの健全性を確認するもの。

ステップ３：スプリント計画会議本番
スプリント目標の設定。


13.デイリースタンドアップとは?
Hint: 目的、所要時間、出席者, タイミング
デイリースタンドアップはおそらくスタンドアップミーティングと同意。
立ってミーティングを行うことで緊急という感覚の醸成につながる。
チームが参加する。目的はタスクについてだけでなく、ゴールへのコミットメントについての共有だとおもう。


14.効果的なデイリースタンドアップを行う方法?
・スタンドアップミーティングはチームのためのもの。
　チームにとって状況の報告をするだけのものではなく、ゴールを達成させるためのチームメンバーの努力を同期させる場。

・ルールは固定ではない。
　3つの質問に答えるやり方だけでなく、質問を追加したり、フォーマットを変えた利してニーズを解決するために必要なことをする。

・自分たちのゴールへのコミットメントについてのもの。
　チームは新しい作業に対して反応しつつ、自分たちのゴールに対するバランスを考えなければならない。

・スクラムマスターは自分の役割を知らなければならない。
　スクラムマスターはチームをファシリテートする。スクラムマスターはチームのタガが外れないようにする役割がある。

・スタンドアップであること。
　立って行うこと。緊急という感覚を醸成させる。

・タイムボックスを尊重する。
時間制限を設けてその中で伝えなければならないことを伝えること。

・実際のタスクボードを見ながら行うことが好ましい。
チーム全員が同じ場所で同時にタスクを扱うことを可能にしてくれる。

・プロジェクターの利用は避ける。

・チームの作業場で行うことが望ましい。

・チームのものである。
　チームがスクラムマスターがいるときと同じようにスタンドアップを進行しているこで、ファシリテーションの教育ができていることになる。


15.スクラムマスターとは何ですか?
スクラムの理解と実践を推進し、プロジェクトを円滑に進めることに責任を持つ人です。スクラムをスクラムチーム全員が正しく理解した上で開発を実践していることを常にチェックします。また、チームの自律的な行動を引き出し、成果を最大限に引き出すことに注力します。

16.スクラムマスターの役割は何ですか?
スクラムを理解した上で、スクラムの進め方が出来ているか管理し、円滑に進めて行く役割を担っている。つまり、チームで協力した開発が出来ているかを管理する。スクラムチーム（ソフトウェア開発チーム）の全体が、スクラムとは何かを理解した上で開発を行っているかチェックします。その上で、チームが協力しやすい環境にあるか確認しながら、サポートする役割を担当。


17.スクラムマスターの責任は何ですか?
スクラムマスターはチームミーティングを手配し、促進する責任がある。
また、スクラムチームの生産性を最大化するために、スクラムチームと組織間のやり取りを改善する責任もある。

18.スクラムの役割とそれぞれの役割を説明してください
Hint: ​https://www.atlassian.com/ja/agile/scrum/roles
スクラムには3つの役割がある。プロダクト所有者、スクラムマスター、開発チームメンバー。
開発チーム：「開発者」を再定義する。
開発者はエンジニアだけではなく、デザイナー、ライター、プログラマーなどあらゆる種類の人々で構成される。
責務：
・スプリントを通して作業を提供する。
・スプリント中の透明性を確保するためにデイリースクラムを行う。

プロダクト所有者：明確な方向性を設定する
設計上、柔軟性と応答性に優れており、チームが最適な価値を提供できるようにするのはプロダクト所有者の責務。ビジネスを代表するのがプロダクト所有者、何を提供することが重要かを開発者に伝えるのもプロダクト所有者。作業に優先順位をつけるのが最も重要な責務。

スクラムマスター：すべてをまとめる
すべてを連携させ、スクラムをうまく機能させるための役割を果たします。


19.スプリントの「ふりかえり」方法?
Hint: ​https://www.atlassian.com/ja/blog/sprint-planning-atlassian
うまくいった項目や今後の改善が必要な項目を特定・整理する。

20.ベロシティとは何ですか?
ベロシティとは1スプリントにチームが消化したポイントの合計のことを指す。
・次のスプリントでどれくらいの作業を対応できそうか検討する際の参考値として利用
・ある程度まとまった規模の案件の開発完了見込み時期を割り出すために利用する。
・チームの成長度合いを把握するため