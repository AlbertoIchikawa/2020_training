質問1:  Abstract Factoryパータンのメリットとデメリット？

[メリット]
・工場から手に入れた製品は互換性のあるものである。
・具体的な製品とクライアントのコード間で密な結合を回避する。
・単一責任の原則。製品コードを一か所に抽出することができる。コードのサポートがしやすくなる。
・クライアントのコードを壊すことなく新しい種類の製品を導入する。

※単一責任の原則
「クラスを変更する理由は1つ以上存在してはならない」ということ。つまりクラスに変更が起こる理由は1つであるべきという原則。役割が複数あると、その役割の数分だけ変更する理由が増えてしまうためです。すなわち、複数の役割が異なった理由で変更される可能性があるから。

※Open-Closed Principle(開放/閉鎖原則)。
一度完成したら、クラスの実装はエラーの修正のためだけに変更され、新機能や機能変更には別のクラスを作る必要があるというもの
拡張に対して開いて (open) いなければならず、
修正に対して閉じて (closed) いなければならない


[デメリット]
コードが複雑になりやすい。